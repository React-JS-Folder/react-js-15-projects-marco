UseEffect Hook is a React JS function to execute code to do something outside of the components.

useEffect(function, array)   //useEffect( ()=>{}, []); 


3 ways to use useEffect( ()=>{}, [] )    //(function, array);
 
  ## useEffect( ()=>{})         //if doesn't have array, it will run every time. 
  ## useEffect( ()=>{}, [])     //if the array is there, but empty, it will run at the initial render only (mounting)
  ## useEffect( ()=>{}, [3])    //if it has a value (variable or number), it will run that number of times

  if you want to execute code inside useEffect when a variable changes
  ## useEffect( ()=>{}, [variable])    //now everytime this variables changes will execute the code inside useEffect()
--------------------------------------------------------------------------------
  There is no limit of useEffect(), multiple useEffect() can be used at the same time  // it is just a wrapper with instructions
--------------------------------------------------------------------------------

import {useState, useEffect} from 'react'

const UseEffectBasics = () => {
  const [value, setValue] = useState(0);
  useEffect( () => {
    document.title = `New Messages(${value})`; 
  })
}

React Hooks are functions, but it can not be inside conditionals statements
React Hooks can have conditional statements inside 

useEffect( () => {
  if(value > 0) {
    document.title= `New Messages(${value})`;
  }
})